// <auto-generated />
using System;
using BSU.BRSM.Bot.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BSU.BRSM.Bot.Data.EF.Migrations
{
    [DbContext(typeof(BotDbContext))]
    [Migration("20231128201729_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.14");

            modelBuilder.Entity("BSU.BRSM.Bot.Core.Data.QuestionDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Answer")
                        .HasColumnType("TEXT");

                    b.Property<string>("Body")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsEnded")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MessageId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UserChatId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserChatId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "Как дела?",
                            DateTime = new DateTime(2023, 11, 28, 23, 17, 29, 510, DateTimeKind.Local).AddTicks(809),
                            IsEnded = true,
                            IsPosted = false,
                            MessageId = 1,
                            UserChatId = 87235698347L
                        },
                        new
                        {
                            Id = 2,
                            Body = "Как твои",
                            DateTime = new DateTime(2023, 11, 28, 23, 17, 29, 510, DateTimeKind.Local).AddTicks(824),
                            IsEnded = false,
                            IsPosted = false,
                            MessageId = 2,
                            UserChatId = 87235698347L
                        },
                        new
                        {
                            Id = 3,
                            Body = "Что делаешь?",
                            DateTime = new DateTime(2023, 11, 28, 23, 17, 29, 510, DateTimeKind.Local).AddTicks(826),
                            IsEnded = true,
                            IsPosted = false,
                            MessageId = 1,
                            UserChatId = 87232694547L
                        },
                        new
                        {
                            Id = 4,
                            Body = "Какая сегодня",
                            DateTime = new DateTime(2023, 11, 28, 23, 17, 29, 510, DateTimeKind.Local).AddTicks(827),
                            IsEnded = false,
                            IsPosted = false,
                            MessageId = 2,
                            UserChatId = 87232694547L
                        },
                        new
                        {
                            Id = 5,
                            Body = "Ты покушал?",
                            DateTime = new DateTime(2023, 11, 28, 23, 17, 29, 510, DateTimeKind.Local).AddTicks(829),
                            IsEnded = true,
                            IsPosted = false,
                            MessageId = 1,
                            UserChatId = 87235656834L
                        },
                        new
                        {
                            Id = 6,
                            Body = "Ты пок",
                            DateTime = new DateTime(2023, 11, 28, 23, 17, 29, 510, DateTimeKind.Local).AddTicks(830),
                            IsEnded = false,
                            IsPosted = false,
                            MessageId = 2,
                            UserChatId = 87235656834L
                        });
                });

            modelBuilder.Entity("BSU.BRSM.Bot.Core.Data.UserDto", b =>
                {
                    b.Property<long>("ChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("ChatId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            ChatId = 87235698347L,
                            FirstName = "Гринь",
                            UserName = "Максим"
                        },
                        new
                        {
                            ChatId = 87232694547L,
                            FirstName = "Гринь",
                            UserName = "Макс"
                        },
                        new
                        {
                            ChatId = 87235656834L,
                            FirstName = "Green",
                            UserName = "MaX"
                        });
                });

            modelBuilder.Entity("BSU.BRSM.Bot.Core.Data.QuestionDto", b =>
                {
                    b.HasOne("BSU.BRSM.Bot.Core.Data.UserDto", "User")
                        .WithMany("Questions")
                        .HasForeignKey("UserChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BSU.BRSM.Bot.Core.Data.UserDto", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
